name: Docker

on:
  push:
    branches: [ main ]
    paths:
      - 'Dockerfile'
      - 'docker-compose*.yml'
      - 'src/**'
  workflow_dispatch:

jobs:
  test:
    name: Test Docker Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build test image
        uses: docker/build-push-action@v5
        with:
          context: .
          target: development
          push: false
          tags: gitignore:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test image
        run: |
          docker run --rm gitignore:test --version

      - name: Start test container
        run: |
          docker run -d \
            --name gitignore-test \
            -p 8080:80 \
            -e ADMIN_PASSWORD=testpass \
            gitignore:test

      - name: Wait for service
        run: |
          for i in {1..30}; do
            if curl -s http://localhost:8080/healthz | grep -q "healthy"; then
              echo "Service is ready"
              exit 0
            fi
            sleep 1
          done
          echo "Service failed to start"
          docker logs gitignore-test
          exit 1

      - name: Run API tests
        run: |
          # Test health endpoint
          curl -s http://localhost:8080/healthz | grep "healthy"

          # Test list endpoint
          curl -s http://localhost:8080/api/v1/list | grep "Go"

          # Test template endpoint
          curl -s http://localhost:8080/api/v1/template/Go | grep "# Binaries"

      - name: Show logs
        if: always()
        run: docker logs gitignore-test

      - name: Stop container
        if: always()
        run: docker stop gitignore-test && docker rm gitignore-test

  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          target: production
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/gitignore:latest
            ${{ secrets.DOCKER_USERNAME }}/gitignore:main
          cache-from: type=gha
          cache-to: type=gha,mode=max
